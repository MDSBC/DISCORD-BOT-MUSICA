const MessageEmbed = require("discord.js").MessageEmbed;

const execute = (bot, msg, args) => {
    if (args.length === 0) {
        const embed = new MessageEmbed();
        embed.setTitle("Para escolher sua √°rea de interesse, reaja √† essa mensagem com o respectivo emoji da √°rea.");
        embed.setDescription(
            ""
        );
        /*embed.addFields([{name: "FFA", value: "‚õîÔ∏è"}]);
        embed.addFields([{name: "Instant", value: "üíÄ"}]);
        embed.addFields([{name: "Gigasplit", value: "‚ö°Ô∏è"}]);
        embed.addFields([{name: "Megasplit", value: "üí•"}]);
        embed.addFields([{name: "Crazy", value: "üí´"}]);
        embed.addFields([{name: "1v1 Self Feed", value: "üó°"}]);
        embed.addFields([{name: "Self Feed", value: "üî•"}]); */
        embed.setAuthor(
            "TBR Cl√£",
            `https://cdn.discordapp.com/icons/${msg.guild.id}/${msg.guild.icon}.png`,
            "https://github.com/MDSBC"
        );
        embed.addFields([
            {name: "FFA", value: "üåö", inline: true},
            {name: "Instant", value: "üíÄ", inline: true},
            {name: "Gigasplit", value: "üçâ", inline: true},
            {name: "Megasplit", value: "üí•", inline: true},
            {name: "Crazy", value: "üí´", inline: true},
            {name: "1v1 Self Feed", value: "üó°", inline: true},
            {name: "Self Feed", value: "üî•", inline: true},
        ]);
        msg.member.send({ embed }).then(async (embed) => {
            try {
                await embed.react("üåö");
                await embed.react("üíÄ");
                await embed.react("üçâ");
                await embed.react("üí•");
                await embed.react("üí´");
                await embed.react("üó°");
                await embed.react("üî•");
            const collector = embed.createReactionCollector(
                (reaction, user) => 
                    ["üåö","üíÄ","üçâ","üí•","üí´","üó°","üî•",].includes(reaction.emoji.name) && !user.bot,
                    {
                        time: 600000,
                    });
            collector.on("collect",(reaction,user) => {
                let role;
                switch (reaction.emoji.name) {
                    case "üåö":
                        role = msg.guild.roles.cache.find((r) => r.name === "FFA");
                        if (role) msg.member.roles.add(role);
                        else console.error("Cargo n√£o encontrado!");
                        break;

                    case "üíÄ":
                        role = msg.guild.roles.cache.find((r) => r.name === "Instant");
                        if (role) msg.member.roles.add(role);
                        else console.error("Cargo n√£o encontrado!");
                        break;

                    case "üçâ":
                        role = msg.guild.roles.cache.find((r) => r.name === "Gigasplit");
                        if (role) msg.member.roles.add(role);
                        else console.error("Cargo n√£o encontrado!");
                        break;

                    case "üí•":
                        role = msg.guild.roles.cache.find((r) => r.name === "Megasplit");
                        if (role) msg.member.roles.add(role);
                        else console.error("Cargo n√£o encontrado!");
                        break;

                    case "üí´":
                        role = msg.guild.roles.cache.find((r) => r.name === "Crazy");
                        if (role) msg.member.roles.add(role);
                        else console.error("Cargo n√£o encontrado!");
                        break;

                    case "üó°":
                        role = msg.guild.roles.cache.find((r) => r.name === "1v1 Self Feed");
                        if (role) msg.member.roles.add(role);
                        else console.error("Cargo n√£o encontrado!");
                        break;

                    case "üî•":
                        role = msg.guild.roles.cache.find((r) => r.name === "Self Feed");
                        if (role) msg.member.roles.add(role);
                        else console.error("Cargo n√£o encontrado!");
                        break;
                    default:
                        break;
                }
            });
        } catch(e) {
            console.error(e);
        }
        });
    } else {
        if (!msg.member.hasPermission("MANAGE_ROLES")) 
            return msg.reply("Voc√™ n√£o tem permiss√£o para executar essa a√ß√£o!");
        const [mention, roleArg] = args;
        const member = msg.mentions.members.first();
        if(!member) return("voc√™ precisa mencionar algu√©m para dar o cargo.");
        if (!roleArg) return msg.reply("voc√™ precisa escolher um cargo!");
        const role = msg.guild.roles.cache.find((r) => (r.name === roleArg));
        if (!role) return msg.reply(`n√£o encontrei o cargo \`${roleArg}\``);
        member.roles.add(role);
    }
};

module.exports ={
    name: "cargo",
    help: "Atribui cargos a um usu√°rio",
    execute,
};